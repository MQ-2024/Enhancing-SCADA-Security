[
    {
        "id": "bc3687e31c7ec633",
        "type": "tab",
        "label": "Node_Red_WindTubine_SCADA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f8c830445ce8c485",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "GeneratorSpeed gauge",
        "group": "199fb1bf59b2e28a",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "GeneratorSpeed",
        "label": "RPM",
        "format": "{{msg.payload.GeneratorSpeed}}",
        "min": 0,
        "max": "850",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 260,
        "wires": []
    },
    {
        "id": "ad1e6e1ab91e6608",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 2 GeneratorSpeed Chart",
        "group": "199fb1bf59b2e28a",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 2 GeneratorSpeed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "850",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1190,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "38a574162a8cf71e",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 4 WindSpeed",
        "group": "63462a91e57cab2f",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gauge",
        "title": "Sensor 4 Speed",
        "label": "m/s",
        "format": "{{msg.payload.WindSpeed}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 420,
        "wires": []
    },
    {
        "id": "812fa2929ab104f3",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 4 Chart WindSpeed",
        "group": "63462a91e57cab2f",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 4 WindSpeed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "51c7f15e7b936574",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 5 PowerOutput",
        "group": "4f9a57b65392f760",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gauge",
        "title": "Sensor 5 PowerOutput",
        "label": "kW",
        "format": "{{msg.payload.PowerOutput}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "7744b4fff57d7988",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 5 Chart PowerOutput",
        "group": "4f9a57b65392f760",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 5 PowerOutput",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "250",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "3703a55fca6d1018",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 6 offsetWindDirection",
        "group": "a0b6880e2526130c",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "donut",
        "title": "Sensor 6 offsetWindDirection",
        "label": "Degree",
        "format": "{{msg.payload.offsetWindDirection}}",
        "min": "-190",
        "max": "190",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1180,
        "y": 580,
        "wires": []
    },
    {
        "id": "2372cf4ebb970327",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 6 offsetWindDirection Chart ",
        "group": "a0b6880e2526130c",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 6 offsetWindDirection",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-190",
        "ymax": "190",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "85a743c38d3893e4",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 7 SpeiseSpannung  ",
        "group": "c98973d285874bf8",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "donut",
        "title": "Sensor 7 SpeiseSpannung  ",
        "label": "Voltage",
        "format": "{{msg.payload.SpeiseSpannung}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#9141ac",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1180,
        "y": 660,
        "wires": []
    },
    {
        "id": "c1be451f22c853dc",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 7 SpeiseSpannung Chart",
        "group": "c98973d285874bf8",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 7 SpeiseSpannung",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "30",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "bc91c6e1aecd8fd9",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 8 PitchDeg",
        "group": "e458e685fcb7f682",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gauge",
        "title": "Sensor 8 PitchDeg",
        "label": "m/s",
        "format": "{{msg.payload.PitchDeg}}",
        "min": 0,
        "max": "90",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 740,
        "wires": []
    },
    {
        "id": "d3669371a9ba9f6f",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 8  PitchDeg Chart",
        "group": "e458e685fcb7f682",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 8 PitchDeg",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "90",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e973202d642b803a",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 9 StatusAnlage",
        "group": "18d137caf6079e57",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "compass",
        "title": "Sensor 9 StatusAnlage",
        "label": "Running",
        "format": "{{msg.payload.StatusAnlage}}",
        "min": "0",
        "max": "190900",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 820,
        "wires": []
    },
    {
        "id": "3622ff845c123965",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 9 StatusAnlage Chart",
        "group": "18d137caf6079e57",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 9 StatusAnlage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "190900",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1864dc0199efd2de",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 10 MaxWindHeute",
        "group": "a0a16b43ea548cc9",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gauge",
        "title": "Sensor 10 MaxWindHeute",
        "label": "Today Max RPM",
        "format": "{{msg.payload.MaxWindHeute}}",
        "min": 0,
        "max": "25",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 900,
        "wires": []
    },
    {
        "id": "a165bc91b940d151",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "Sensor 10 MaxWindHeute Chart",
        "group": "a0a16b43ea548cc9",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Sensor 10 MaxWindHeute",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "187500",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1190,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "a3e4ae307183c413",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "GeneratorSpeed Parser",
        "func": "msg.payload=msg.payload.GeneratorSpeed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 380,
        "wires": [
            [
                "ad1e6e1ab91e6608",
                "f8c830445ce8c485"
            ]
        ]
    },
    {
        "id": "4dfc8eb5e3ea68bc",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "GeneratorTemperature Parser",
        "func": "msg.payload=msg.payload.GeneratorTemperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "6e18201f8ec691b1",
                "77edf054af2ca1ed"
            ]
        ]
    },
    {
        "id": "55314dcd9bc3208d",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "WindSpeed Parser",
        "func": "msg.payload=msg.payload.WindSpeed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 460,
        "wires": [
            [
                "812fa2929ab104f3",
                "38a574162a8cf71e"
            ]
        ]
    },
    {
        "id": "4be2fc5593f5072f",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "PowerOutput Parser",
        "func": "msg.payload=msg.payload.PowerOutput;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "7744b4fff57d7988",
                "51c7f15e7b936574"
            ]
        ]
    },
    {
        "id": "4cd2e6447ee425ef",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "offsetWindDirection Parser",
        "func": "msg.payload=msg.payload.offsetWindDirection;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 540,
        "wires": [
            [
                "2372cf4ebb970327",
                "3703a55fca6d1018"
            ]
        ]
    },
    {
        "id": "0551653dba8a8dd2",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "PitchDeg Parser",
        "func": "msg.payload=msg.payload.PitchDeg;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 620,
        "wires": [
            [
                "d3669371a9ba9f6f",
                "bc91c6e1aecd8fd9"
            ]
        ]
    },
    {
        "id": "e85a35b6dac11886",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "SpeiseSpannung Parser",
        "func": "msg.payload=msg.payload.SpeiseSpannung;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 580,
        "wires": [
            [
                "c1be451f22c853dc",
                "85a743c38d3893e4"
            ]
        ]
    },
    {
        "id": "4e7c72c2b45bb9f1",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "StatusAnlage Parser",
        "func": "msg.payload=msg.payload.StatusAnlage;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 660,
        "wires": [
            [
                "3622ff845c123965",
                "e973202d642b803a"
            ]
        ]
    },
    {
        "id": "fa53445496622f51",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "MaxWindHeute Parser",
        "func": "msg.payload = msg.payload.MaxWindHeute\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 700,
        "wires": [
            [
                "a165bc91b940d151",
                "1864dc0199efd2de"
            ]
        ]
    },
    {
        "id": "fb0ed84822cc26dd",
        "type": "mqtt out",
        "z": "bc3687e31c7ec633",
        "name": "WindTurbine1 P",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7b14ce56e293d9c",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "f6e02a05afe0dd48",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "Topic & Payload Parser",
        "func": "// Extract topic and payload\nlet topic = msg.topic; // e.g., \"scada/sensor_1\"\nlet payload = msg.payload; // JSON object\n\n// Map topics to field names (matches your Python SENSOR_FIELDS)\nlet sensorMap = {\n    \"scada/sensor_1\": \"RotorSpeed\",\n    \"scada/sensor_2\": \"GeneratorSpeed\",\n    \"scada/sensor_3\": \"GeneratorTemperature\",\n    \"scada/sensor_4\": \"WindSpeed\",\n    \"scada/sensor_5\": \"PowerOutput\",\n    \"scada/sensor_6\": \"offsetWindDirection\",\n    \"scada/sensor_7\": \"SpeiseSpannung\",\n    \"scada/sensor_8\": \"PitchDeg\",\n    \"scada/sensor_9\": \"StatusAnlage\",\n    \"scada/sensor_10\": \"MaxWindHeute\"\n};\n\n// Get sensor_id and field\nlet sensorId = payload.sensor_id; // e.g., \"sensor_1\"\nlet field = sensorMap[topic];\n\nif (!field) {\n    msg.payload = { error: \"Unknown topic: \" + topic };\n    return msg;\n}\n\n// Extract value from the payload (dynamic key)\nlet value = payload[field];\n\n// Prepare SQL INSERT\nmsg.topic = \"INSERT INTO scada_data (sensor_id, field, value) VALUES (?, ?, ?)\";\nmsg.payload = [sensorId, field, value];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7fa6f18f76952861",
        "type": "mysql",
        "z": "bc3687e31c7ec633",
        "mydb": "9fc4cdcfd9b32742",
        "name": "SCADA MySQL",
        "x": 540,
        "y": 740,
        "wires": [
            [
                "37f274e82997f37d"
            ]
        ]
    },
    {
        "id": "37f274e82997f37d",
        "type": "debug",
        "z": "bc3687e31c7ec633",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 740,
        "wires": []
    },
    {
        "id": "1903bbfe1d087b43",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "Edge Database Parser",
        "func": "// Expecting a single message with all sensor readings\nlet payload = msg.payload; // e.g., {\"timestamp\": 1743046292, \"RotorSpeed\": 0.1, \"GeneratorSpeed\": 0, ...}\n\n// List of expected fields\nlet fields = [\n    \"RotorSpeed\", \"GeneratorSpeed\", \"GeneratorTemperature\", \"WindSpeed\", \"PowerOutput\",\n    \"offsetWindDirection\", \"SpeiseSpannung\", \"PitchDeg\", \"StatusAnlage\", \"MaxWindHeute\"\n];\n\n// Extract timestamp (convert Unix to MySQL format if needed)\nlet timestamp = payload.timestamp ? new Date(payload.timestamp * 1000).toISOString().slice(0, 19).replace('T', ' ') : null;\n\n// Prepare values array for all fields\nlet values = fields.map(field => {\n    let value = payload[field];\n    return (value !== undefined && value !== null) ? value : null;\n});\n\n// Check if all required fields are present\nif (values.some(val => val === null)) {\n    msg.payload = { error: \"Missing or invalid values in payload\", payload: payload };\n    return msg;\n}\n\n// Prepare SQL INSERT for one row\nmsg.topic = `\n    INSERT INTO scada_data_nodered (\n        timestamp, RotorSpeed, GeneratorSpeed, GeneratorTemperature, WindSpeed, \n        PowerOutput, offsetWindDirection, SpeiseSpannung, PitchDeg, StatusAnlage, MaxWindHeute\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n`;\nmsg.payload = [timestamp, ...values];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 620,
        "wires": [
            [
                "7fa6f18f76952861"
            ]
        ]
    },
    {
        "id": "3dc09891fd2323f8",
        "type": "mqtt in",
        "z": "bc3687e31c7ec633",
        "name": "",
        "topic": "scada/windturbine",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "7975715ffb9e71f7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 460,
        "wires": [
            [
                "1903bbfe1d087b43",
                "2a412703f392df59",
                "f6e02a05afe0dd48",
                "a3e4ae307183c413",
                "4dfc8eb5e3ea68bc",
                "55314dcd9bc3208d",
                "4be2fc5593f5072f",
                "4cd2e6447ee425ef",
                "e85a35b6dac11886",
                "0551653dba8a8dd2",
                "4e7c72c2b45bb9f1",
                "fa53445496622f51",
                "6e5ab789994fcfcb",
                "83f1c0957234043e",
                "d9115de2e01faa91"
            ]
        ]
    },
    {
        "id": "2a412703f392df59",
        "type": "debug",
        "z": "bc3687e31c7ec633",
        "name": "MQTT Input",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "6e5ab789994fcfcb",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "RotorSpeed Parser",
        "func": "msg.payload = {\n    \"RotorSpeed\": Number(msg.payload.RotorSpeed)\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 340,
        "wires": [
            [
                "7cc8c7c1e904460c",
                "c62a6ebe5e04df5c"
            ]
        ]
    },
    {
        "id": "83f1c0957234043e",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "function 18",
        "func": "// Extract incoming topic and payload\nlet topic = msg.topic; // e.g., \"scada/sensor_1\" or \"scada/windturbine\"\nlet payload = msg.payload; // e.g., {\"sensor_id\": \"sensor_1\", \"RotorSpeed\": 100, ...}\n\n// Map topics to field names\nlet sensorMap = {\n    \"scada/sensor_1\": \"RotorSpeed\",\n    \"scada/sensor_2\": \"GeneratorSpeed\",\n    \"scada/sensor_3\": \"GeneratorTemperature\",\n    \"scada/sensor_4\": \"WindSpeed\",\n    \"scada/sensor_5\": \"PowerOutput\",\n    \"scada/sensor_6\": \"offsetWindDirection\",\n    \"scada/sensor_7\": \"SpeiseSpannung\",\n    \"scada/sensor_8\": \"PitchDeg\",\n    \"scada/sensor_9\": \"StatusAnlage\",\n    \"scada/sensor_10\": \"MaxWindHeute\"\n};\n\n// Handle scada/windturbine as a special case with all fields\nif (topic === \"scada/windturbine\") {\n    msg.topic = \"v1/devices/me/telemetry\";\n    msg.payload = {\n        \"RotorSpeed\": payload.RotorSpeed,\n        \"GeneratorSpeed\": payload.GeneratorSpeed,\n        \"GeneratorTemperature\": payload.GeneratorTemperature,\n        \"WindSpeed\": payload.WindSpeed,\n        \"PowerOutput\": payload.PowerOutput,\n        \"offsetWindDirection\": payload.offsetWindDirection,\n        \"SpeiseSpannung\": payload.SpeiseSpannung,\n        \"PitchDeg\": payload.PitchDeg,\n        \"StatusAnlage\": payload.StatusAnlage,\n        \"MaxWindHeute\": payload.MaxWindHeute\n    };\n} else {\n    // Handle individual sensor topics\n    let field = sensorMap[topic];\n    if (!field || !payload[field]) {\n        msg.payload = { error: \"Unknown or missing field for topic: \" + topic };\n        return msg;\n    }\n    msg.topic = \"v1/devices/me/telemetry\";\n    msg.payload = { [field]: payload[field] }; // e.g., {\"RotorSpeed\": 100}\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d9115de2e01faa91",
        "type": "function",
        "z": "bc3687e31c7ec633",
        "name": "function 19",
        "func": "let topic = msg.topic;\nlet payload = msg.payload;\nmsg.topic = \"v1/devices/me/telemetry\";\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "fb0ed84822cc26dd"
            ]
        ]
    },
    {
        "id": "6e18201f8ec691b1",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "",
        "group": "3cf9f0e9d5e433d4",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Generator Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "120",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 380,
        "wires": []
    },
    {
        "id": "77edf054af2ca1ed",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "",
        "group": "3cf9f0e9d5e433d4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Generator Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c62a6ebe5e04df5c",
        "type": "ui_chart",
        "z": "bc3687e31c7ec633",
        "name": "",
        "group": "f56bc393cd36952d",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Sensor 1 Rotor Speed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7cc8c7c1e904460c",
        "type": "ui_gauge",
        "z": "bc3687e31c7ec633",
        "name": "",
        "group": "f56bc393cd36952d",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Sensor 1 Rotor Speed",
        "label": "units",
        "format": "{{msg.payload.RotorSpeed}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 180,
        "wires": []
    },
    {
        "id": "199fb1bf59b2e28a",
        "type": "ui_group",
        "name": "Sensor 2",
        "tab": "086817baa45e54a8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "63462a91e57cab2f",
        "type": "ui_group",
        "name": "Sensor 4",
        "tab": "086817baa45e54a8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f9a57b65392f760",
        "type": "ui_group",
        "name": "Sensor 5",
        "tab": "086817baa45e54a8",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0b6880e2526130c",
        "type": "ui_group",
        "name": "Sensor 6",
        "tab": "086817baa45e54a8",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c98973d285874bf8",
        "type": "ui_group",
        "name": "Sensor 7",
        "tab": "086817baa45e54a8",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e458e685fcb7f682",
        "type": "ui_group",
        "name": "Sensor 8",
        "tab": "086817baa45e54a8",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "18d137caf6079e57",
        "type": "ui_group",
        "name": "Sensor 9",
        "tab": "086817baa45e54a8",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0a16b43ea548cc9",
        "type": "ui_group",
        "name": "Sensor 10",
        "tab": "086817baa45e54a8",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7b14ce56e293d9c",
        "type": "mqtt-broker",
        "name": "WindPower",
        "broker": "192.168.3.56",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9fc4cdcfd9b32742",
        "type": "MySQLdatabase",
        "name": "scadaDB1",
        "host": "192.168.137.220",
        "port": "3306",
        "db": "scada_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "7975715ffb9e71f7",
        "type": "mqtt-broker",
        "name": "Local MQTT",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3cf9f0e9d5e433d4",
        "type": "ui_group",
        "name": "Sensor 3",
        "tab": "086817baa45e54a8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f56bc393cd36952d",
        "type": "ui_group",
        "name": "Sensor 1",
        "tab": "086817baa45e54a8",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "086817baa45e54a8",
        "type": "ui_tab",
        "name": "Wind Turbine 1 Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]